{"version":3,"file":"static/js/528.0df6916b.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","services/fetchApi.js"],"sourcesContent":["\nimport styled from 'styled-components';\n\n\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 300px);\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n  text-align: center;\n`;","import { useLocation } from \"react-router-dom\";\nimport { Container,  CardWrapper, MovieName,  } from \"./MovieList.styled\";\nimport { Link } from \"react-router-dom\";\n\n\n\nconst MoviesList = ({movies}) => {\nconst location = useLocation();\n  const poster = poster_path => {\n    if (poster_path === null) {\n      return 'https://via.placeholder.com/300sx450.jpg';\n    }\n    return `https://image.tmdb.org/t/p/w300${poster_path}`;\n  };\n\n    return(\n      <Container>\n       {movies.map(\n        ({ id, original_title, original_name, name, title, poster_path }) => (\n        \n        <CardWrapper key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n          <img\n                  src={`${poster(poster_path)}`}\n                  alt={`${title || original_title || name}`}\n                />\n            <MovieName>{original_title || original_name}</MovieName>\n          </Link>\n        </CardWrapper>\n        \n      ))}\n    </Container>\n    )\n        }\nexport default MoviesList;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\nexport const Button = styled.button`\n  cursor: pointer;\n  background-color: coral;\n  border: 1px solid coral;\n  border-radius: 4px;\n  color: #fff;\n  transition: color 250ms linear, background-color 250ms linear;\n  &:hover {\n    color: coral;\n    background-color: #fff;\n  }\n`;\n","import { useState } from 'react';\nimport { Input, Wrapper, Button } from './SearchBar.styled';\n\n const SearchBar = ({ onSubmit }) => {\n  const [movieName, setMovieName] = useState('');\n\n  const inputHandler = e => {\n    setMovieName(e.target.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (movieName === '') {\n      alert('Please enter something');\n      return;\n    }\n\n    onSubmit(movieName);\n    setMovieName('');\n  };\n\n  return (\n    <Wrapper>\n      <form onSubmit={handleSubmit}>\n        <Input value={movieName} onChange={inputHandler} />\n        <Button type=\"submit\">Search</Button>\n      </form>\n    </Wrapper>\n  );\n};\n\nexport default SearchBar;","import { useEffect, useState } from 'react';\nimport {fetchMovieByName} from '../services/fetchApi';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport { Outlet, useSearchParams } from 'react-router-dom';\n import SearchBar from '../components/SearchBar/SearchBar'; \n \n \n const Movie = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState([null]);\n    const [searchParams, setSearchParams] = useSearchParams()\n\n    const query = searchParams.get('query');\n\nconst handleFormSubmit = search => {\n    setSearchParams({ query: search });\n    setError(null);\n  };\n\n        useEffect(() =>{\n            if(!query) return;\n            async function getMovieByName() {\n            try {\n                const movieData = await fetchMovieByName(query);\n                setMovies(movieData.results)\n                if (movieData.results.length === 0) {\n                    alert(`${query} not found`);\n                    return;\n                  }\n                              \n            } catch (error) {\n            setError(error)\n            }\n        }\n        getMovieByName()\n        }, [query])\n\n        return(\n            <main>\n            {error && error.message}\n            <SearchBar onSubmit={handleFormSubmit} />\n      \n            {movies && <MoviesList movies={movies} />}\n      \n            <Outlet />\n          </main>\n            )\n      \n  };\n\n  export default Movie;\n  ","import axios from 'axios';\n\nconst APY_KEY = '7ac9391c36294b15d48007ced829db82';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingMovies() {\n  const params = {\n    api_key: APY_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get('/trending/all/day', { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchMovieById(movieId) {\n  const params = {\n    api_key: APY_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchMovieByName(movieName) {\n  const params = {\n    api_key: APY_KEY,\n    language: 'en-US',\n    query: movieName,\n  };\n\n  const response = await axios.get(`/search/movie`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchCast(movieId) {\n  const params = {\n    api_key: APY_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}/credits`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchReviews(movieId) {\n  const params = {\n    api_key: APY_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}/reviews`, { params });\n  const data = response.data;\n\n  return data;\n}"],"names":["Container","styled","CardWrapper","MovieName","movies","location","useLocation","poster","poster_path","map","id","original_title","original_name","name","title","to","state","from","src","alt","Wrapper","Input","Button","onSubmit","useState","movieName","setMovieName","e","preventDefault","alert","value","onChange","target","toLowerCase","trim","type","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMovieByName","movieData","results","length","getMovieByName","message","search","MoviesList","APY_KEY","fetchTrendingMovies","params","api_key","language","axios","response","data","fetchMovieById","movieId","fetchCast","fetchReviews"],"sourceRoot":""}